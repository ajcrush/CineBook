version: "3.8"

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: cinebook-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-cinebook}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-changeme}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-cinebook_db}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cinebook-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: cinebook-api
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${PORT:-5000}
      MONGO_URI: mongodb://${MONGO_ROOT_USER:-cinebook}:${MONGO_ROOT_PASSWORD:-changeme}@mongodb:27017/${MONGO_DB_NAME:-cinebook_db}?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLIC_KEY: ${STRIPE_PUBLIC_KEY}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:5173}
    volumes:
      - ./backend/src:/app/src
    ports:
      - "5077:5000"
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:5000/api/health', (r) => {if (r.statusCode !== 200) throw new Error(r.statusCode)})",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cinebook-network

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: cinebook-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      VITE_API_BASE_URL: http://backend:5000/api
    ports:
      - "80:80"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - cinebook-network

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  cinebook-network:
    driver: bridge
