apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-config
  namespace: cinebook
data:
  MONGO_INITDB_DATABASE: cinebook_db

---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
  namespace: cinebook
type: Opaque
stringData:
  MONGO_INITDB_ROOT_USERNAME: cinebook
  MONGO_INITDB_ROOT_PASSWORD: changeme

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: cinebook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:7
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: MONGO_INITDB_ROOT_PASSWORD
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mongodb-config
                  key: MONGO_INITDB_DATABASE
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - name: mongodb-storage
              mountPath: /data/db
      volumes:
        - name: mongodb-storage
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: cinebook
spec:
  selector:
    app: mongodb
  ports:
    - port: 27017
      targetPort: 27017
  type: ClusterIP
